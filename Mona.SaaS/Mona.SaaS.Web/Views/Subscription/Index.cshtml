@model LandingPageModel

@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    Layout = null;
}

<html lang="@Localizer["en"]">
<head>
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <title>@Localizer["Confirm Purchase"]&nbsp;|&nbsp;@Model.OfferId</title>
    <style>
        a.footer {
            color: black;
        }
    </style>
</head>
<body style="display: flex; align-items: center; height: 100%; padding-top: 40px; padding-bottom: 40px">
    <main style="width: 100%; max-width: 960px; padding: 15px; margin: auto">
        <div class="container">
            @if (Model.InTestMode)
            {
                <div style="margin-bottom: 30px" class="alert alert-warning" role="alert">
                    <h5 class="alert-heading">@Localizer["Mona is currently running in test mode."]</h5>
                    @Localizer["In test mode, Mona will never try to reach out to any of"] <a href="https://docs.microsoft.com/azure/marketplace/partner-center-portal/pc-saas-fulfillment-api-v2" class="alert-link">@Localizer["the Microsoft Partner Center APIs"]</a>.
                    @Localizer["You can disable test mode through"] <a href=Url.RouteUrl("admin") class="alert-link"> @Localizer["the Mona admin center."]</a>
                    @Localizer["To learn more about test mode, please refer to"]<a href="https://github.com/azure" class="alert-link"> @Localizer["the Mona docs."]</a>
                </div>
            }
            @if (string.IsNullOrEmpty(Model.ErrorCode))
            {
                if (string.IsNullOrEmpty(Model.UserFriendlyName))
                {
                    <h1 class="display-6">@Localizer["You're almost done."]</h1>
                }
                else
                {
                    <h1 class="display-6">@Localizer["You're almost done, {0}.", Model.UserFriendlyName]</h1>
                }
                <hr />
                <p>@Localizer["Please review your purchase details below before confirming."]</p>
                <table class="table table-bordered table-striped">
                    <tbody>
                        <tr>
                            <th scope="row">@Localizer["Subscription"]</th>
                            <td>
                                @Model.SubscriptionName<br />
                                <small class="text-muted">@Model.SubscriptionId</small>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">@Localizer["Offer"]</th>
                            <td>@Model.OfferId</td>
                        </tr>
                        <tr>
                            <th scope="row">@Localizer["Plan"]</th>
                            <td>@Model.PlanId</td>
                        </tr>
                        @if (Model.SeatQuantity.HasValue)
                        {
                            <tr>
                                <th scope="row">@Localizer["Seats"]</th>
                                <td>@Model.SeatQuantity</td>
                            </tr>
                        }
                        <tr>
                            <th scope="row">@Localizer["Email"]</th>
                            <td>@Model.BeneficiaryEmailAddress</td>
                        </tr>
                        @if (Model.BeneficiaryEmailAddress != Model.PurchaserEmailAddress)
                        {
                            <tr>
                                <th scope="row">@Localizer["Purchaser Email"]</th>
                                <td>@Model.PurchaserEmailAddress</td>
                            </tr>
                        }
                    </tbody>
                </table>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.SubscriptionId)
                    <div style="margin-top: 30px">
                        <button style="width: 100%" type="submit" class="btn btn-primary">@Localizer["Confirm Purchase"]</button>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    <h4 class="alert-heading">@Localizer["Something went wrong."]</h4>
                    @switch (Model.ErrorCode)
                    {
                        case Mona.SaaS.Web.Controllers.SubscriptionController.ErrorCodes.SubscriptionNotFound:
                            <p>@Localizer["We were unable to activate your subscription. Please return to the original AppSource/Marketplace listing and try again."]</p>
                            break;
                        case Mona.SaaS.Web.Controllers.SubscriptionController.ErrorCodes.SubscriptionActivationFailed:
                            <p>@Localizer["We were unable to activate your subscription. Please return to the original AppSource/Marketplace listing and try again."]</p>
                            break;
                        case Mona.SaaS.Web.Controllers.SubscriptionController.ErrorCodes.UnableToResolveMarketplaceToken:
                            <p>@Localizer["We were unable to get your subscription information. Please return to the original AppSource/Marketplace listing and try again."]</p>
                            break;
                    }
                </div>
            }
        </div>
        <div class="container" style="margin-top: 30px">
            <hr />
            <p class="text-right">
                @{
                    if (string.IsNullOrEmpty(Model.PublisherHomePageUrl) == false)
                    {
                        <a class="footer" href="@Model.PublisherHomePageUrl">@Localizer["Home"]</a><span>&nbsp;|</span>
                    }
                    if (string.IsNullOrEmpty(Model.PublisherContactPageUrl) == false)
                    {
                        <a class="footer" href="@Model.PublisherContactPageUrl">@Localizer["Contact"]</a><span>&nbsp;|</span>
                    }
                    if (string.IsNullOrEmpty(Model.PublisherPrivacyNoticePageUrl) == false)
                    {
                        <a class="footer" href="@Model.PublisherContactPageUrl">@Localizer["Privacy"]</a><span>&nbsp;|</span>
                    }

                    <span class="footer">@(Model.PublisherCopyrightNotice ?? $"© {Model.PublisherDisplayName} {DateTime.UtcNow.Year}")</span>
                }
            </p>
        </div>
    </main>
</body>
</html>