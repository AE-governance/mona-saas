{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentName": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 13,
            "metadata": {
                "description": "A unique, publisher-defined name that identifies this Mona deployment."
            }
        },
        "aadTenantId": {
            "type": "string",
            "metadata": {
                "description": "This Mona deployment's Azure Active Directory (AAD) tenant ID."
            }
        },
        "aadClientId": {
            "type": "string",
            "metadata": {
                "description": "This Mona deployment's Azure Active Directory (AAD) client ID."
            }
        },
        "aadPrincipalId": {
            "type": "string",
            "metadata": {
                "description": "This Mona deployment's Azure Active Directory (AAD) enterprise application/principal object ID."
            }
        },
        "aadClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "This Mona deployment's Azure Active Directory (AAD) client secret."
            }
        },
        "appServicePlanId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "If provided, specifies the ID of an existing app service plan that the Mona web app should be deployed to."
            }
        },
        "eventVersion": {
            "type": "string",
            "allowedValues": [
                "2021-05-01",
                "2021-10-01"
            ],
            "defaultValue": "2021-10-01",
            "metadata": {
                "description": "The version of events that this Mona deployment will publish to Event Grid."
            }
        },
        "language": {
            "type": "string",
            "defaultValue": "en",
            "allowedValues": [
                "en", // English
                "es" // Spanish
            ],
            "metadata": {
                "description": "The preferred UI language for this Mona deployment."
            }
        }
    },
    "variables": {
        "monaVersion": "0.1-prerelease", // TODO: We need to get better at bumping this...
        "deploymentName": "[toLower(if(empty(parameters('deploymentName')), uniqueString(resourceGroup().id), parameters('deploymentName')))]",
        "deploymentNameUnique": "[uniqueString(resourceGroup().id, deployment().name, variables('deploymentName'))]",
        "storageAccountName": "[concat('monastorage', variables('deploymentNameUnique'))]",
        "blobServiceName": "default",
        "configContainerName": "configuration",
        "testSubContainerName": "test-subscriptions",
        "stageSubContainerName": "stage-subscriptions",
        "akvName": "[concat('mona-akv-', variables('deploymentName'))]",
        "eventGridTopicName": "[concat('mona-events-', variables('deploymentName'))]",
        "appInsightsName": "[concat('mona-app-insights-', variables('deploymentName'))]",
        "appPlanName": "[concat('mona-plan-', variables('deploymentName'))]",
        "webAppName": "[concat('mona-web-', variables('deploymentName'))]",
        "marketplaceApiAuthAudience": "20e940b3-4c77-4b0b-9a53-9e16a1b010a7",
        "logicApps_prefixes": {
            "onPurchased": "mona-on-subscription-purchased-",
            "onCancelled": "mona-on-subscription-cancelled-",
            "onPlanChanged": "mona-on-subscription-plan-changed-",
            "onSeatQtyChanged": "mona-on-subscription-seat-qty-changed-",
            "onSuspended": "mona-on-subscription-suspended-",
            "onReinstated": "mona-on-subscription-reinstated-",
            "onRenewed": "mona-on-subscription-renewed-"
        },
        "logicApps_ui": {
            "en": {
                "eventGridConnectionDisplayName": "Mona Subscription Events",
                "appNames": {
                    "onCancelled": "On subscription cancelled",
                    "onPurchased": "On subscription purchased",
                    "onPlanChanged": "On subscription plan changed",
                    "onSeatQtyChanged": "On subscription seat quantity changed",
                    "onSuspended": "On subscription suspended",
                    "onReinstated": "On subscription reinstated",
                    "onRenewed": "On subscription renewed"
                },
                "appDescriptions": {
                    "onCancelled": "This workflow is automatically triggered after Mona has been notified by the AppSource/Marketplace that a subscription has been cancelled.",
                    "onPurchased": "This workflow is automatically triggered after a customer has confirmed their AppSource/Marketplace purchase through the Mona landing page.",
                    "onPlanChanged": "This workflow is automatically triggered after Mona has been notified by the AppSource/Marketplace that a subscription plan has been changed.",
                    "onSeatQtyChanged": "This workflow is automatically triggered after Mona has been notified by the AppSource/Marketplace that a subscription seat quantity has been changed.",
                    "onSuspended": "This workflow is automatically triggered after Mona has been notified by the AppSource/Marketplace that a subscription has been suspended.",
                    "onReinstated": "This workflow is automatically triggered after Mona has been notified by the AppSource/Marketplace that a subscription has been reinstated.",
                    "onRenewed": "This workflow is automatically triggered after Mona has been notified by the AppSource/Marketplace that a subscription has been renewed."
                },
                "triggerNames": {
                    "onCancelled": "When_a_subscription_is_cancelled",
                    "onPurchased": "When_a_subscription_is_purchased",
                    "onPlanChanged": "When_a_subscription_plan_is_changed",
                    "onSeatQtyChanged": "When_subscription_seats_are_changed",
                    "onSuspended": "When_a_subscription_is_suspended",
                    "onReinstated": "When_a_subscription_is_reinstated",
                    "onRenewed": "When_a_subscription_is_renewed"
                },
                "actionNames": {
                    "parseEventInfo": "Parse_event_information",
                    "parseSubscriptionInfo": "Parse_subscription_information",
                    "yourIntegrationLogic": "Add_your_integration_logic_here",
                    "notifyMarketplaceCondition": "Conditional_|_Notify_the_Marketplace",
                    "notifyMarketplace": "Notify_the_Marketplace"
                }
            }
        },
        "logicApps": {
            "eventGridConnectionName": "[concat('mona-events-connection-', variables('deploymentName'))]",
            "onPurchased": {
                "name": "[concat(variables('logicApps_prefixes').onPurchased, variables('deploymentName'))]",
                "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', concat(variables('logicApps_prefixes').onPurchased, variables('deploymentName')), variables('logicApps_ui')[parameters('language')].triggerNames.onPurchased)]",
                "resourceId": "[resourceId('Microsoft.Logic/workflows', concat(variables('logicApps_prefixes').onPurchased, variables('deploymentName')))]",
                "defaultState": "Enabled",
                "triggerEventType": "Mona.SaaS.Marketplace.SubscriptionPurchased"
            },
            "onCancelled": {
                "name": "[concat(variables('logicApps_prefixes').onCancelled, variables('deploymentName'))]",
                "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', concat(variables('logicApps_prefixes').onCancelled, variables('deploymentName')), variables('logicApps_ui')[parameters('language')].triggerNames.onCancelled)]",
                "resourceId": "[resourceId('Microsoft.Logic/workflows', concat(variables('logicApps_prefixes').onCancelled, variables('deploymentName')))]",
                "defaultState": "Enabled",
                "triggerEventType": "Mona.SaaS.Marketplace.SubscriptionCancelled"
            },
            "onPlanChanged": {
                "name": "[concat(variables('logicApps_prefixes').onPlanChanged, variables('deploymentName'))]",
                "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', concat(variables('logicApps_prefixes').onPlanChanged, variables('deploymentName')), variables('logicApps_ui')[parameters('language')].triggerNames.onPlanChanged)]",
                "resourceId": "[resourceId('Microsoft.Logic/workflows', concat(variables('logicApps_prefixes').onPlanChanged, variables('deploymentName')))]",
                "defaultState": "Enabled",
                "triggerEventType": "Mona.SaaS.Marketplace.SubscriptionPlanChanged"
            },
            "onSeatQtyChanged": {
                "name": "[concat(variables('logicApps_prefixes').onSeatQtyChanged, variables('deploymentName'))]",
                "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', concat(variables('logicApps_prefixes').onSeatQtyChanged, variables('deploymentName')), variables('logicApps_ui')[parameters('language')].triggerNames.onSeatQtyChanged)]",
                "resourceId": "[resourceId('Microsoft.Logic/workflows', concat(variables('logicApps_prefixes').onSeatQtyChanged, variables('deploymentName')))]",
                "defaultState": "Enabled",
                "triggerEventType": "Mona.SaaS.Marketplace.SubscriptionSeatQuantityChanged"
            },
            "onSuspended": {
                "name": "[concat(variables('logicApps_prefixes').onSuspended, variables('deploymentName'))]",
                "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', concat(variables('logicApps_prefixes').onSuspended, variables('deploymentName')), variables('logicApps_ui')[parameters('language')].triggerNames.onSuspended)]",
                "resourceId": "[resourceId('Microsoft.Logic/workflows', concat(variables('logicApps_prefixes').onSuspended, variables('deploymentName')))]",
                "defaultState": "Enabled",
                "triggerEventType": "Mona.SaaS.Marketplace.SubscriptionSuspended"
            },
            "onReinstated": {
                "name": "[concat(variables('logicApps_prefixes').onReinstated, variables('deploymentName'))]",
                "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', concat(variables('logicApps_prefixes').onReinstated, variables('deploymentName')), variables('logicApps_ui')[parameters('language')].triggerNames.onReinstated)]",
                "resourceId": "[resourceId('Microsoft.Logic/workflows', concat(variables('logicApps_prefixes').onReinstated, variables('deploymentName')))]",
                "defaultState": "Enabled",
                "triggerEventType": "Mona.SaaS.Marketplace.SubscriptionReinstated"
            },
            "onRenewed": {
                "name": "[concat(variables('logicApps_prefixes').onRenewed, variables('deploymentName'))]",
                "triggerId": "[resourceId('Microsoft.Logic/workflows/triggers', concat(variables('logicApps_prefixes').onRenewed, variables('deploymentName')), variables('logicApps_ui')[parameters('language')].triggerNames.onReinstated)]",
                "resourceId": "[resourceId('Microsoft.Logic/workflows', concat(variables('logicApps_prefixes').onRenewed, variables('deploymentName')))]",
                "defaultState": "Enabled",
                "triggerEventType": "Mona.SaaS.Marketplace.SubscriptionRenewed"
            }
        }
    },
    "resources": [
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appInsightsName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/managementPolicies",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "policy": {
                    "rules": [
                        {
                            "name": "AgeOffStagedSubscriptions",
                            "enabled": true,
                            "type": "Lifecycle",
                            "definition": {
                                "filters": {
                                    "blobTypes": [
                                        "blockBlob"
                                    ],
                                    "prefixMatch": [
                                        "[variables('stageSubContainerName')]"
                                    ]
                                },
                                "actions": {
                                    "baseBlob": {
                                        "delete": {
                                            "daysAfterModificationGreaterThan": 30
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": "AgeOffTestSubscriptions",
                            "enabled": true,
                            "type": "Lifecycle",
                            "definition": {
                                "filters": {
                                    "blobTypes": [
                                        "blockBlob"
                                    ],
                                    "prefixMatch": [
                                        "[variables('testSubContainerName')]"
                                    ]
                                },
                                "actions": {
                                    "baseBlob": {
                                        "delete": {
                                            "daysAfterModificationGreaterThan": 30
                                        }
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccountName'), '/', variables('blobServiceName'))]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "isVersioningEnabled": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccountName'), '/', variables('blobServiceName'), '/', variables('testSubContainerName'))]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), variables('blobServiceName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccountName'), '/', variables('blobServiceName'), '/', variables('stageSubContainerName'))]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), variables('blobServiceName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccountName'), '/', variables('blobServiceName'), '/', variables('configContainerName'))]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), variables('blobServiceName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2020-06-01",
            "name": "[variables('eventGridTopicName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "inputSchema": "EventGridSchema",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('appPlanName')]",
            "condition": "[empty(parameters('appServicePlanId'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "app"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('webAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('appPlanName')]",
                "[variables('appInsightsName')]"
            ],
            "kind": "app",
            "properties": {
                "serverFarmId": "[if(empty(parameters('appServicePlanId')), resourceId('Microsoft.Web/serverfarms', variables('appPlanName')), parameters('appServicePlanId'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('webAppName'), '/appsettings')]",
            "dependsOn": [
                "[variables('webAppName')]",
                "[variables('storageAccountName')]",
                "[variables('eventGridTopicName')]"
            ],
            "properties": {
                "Deployment:AppInsightsInstrumentationKey": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2014-04-01').InstrumentationKey]",
                "Deployment:AzureResourceGroupName": "[resourceGroup().name]",
                "Deployment:AzureSubscriptionId": "[subscription().subscriptionId]",
                "Deployment:EventVersion": "[parameters('eventVersion')]",
                "Deployment:IsTestModeEnabled": "true",
                "Deployment:MonaVersion": "[variables('monaVersion')]",
                "Deployment:Name": "[variables('deploymentName')]",
                "Identity:AdminIdentity:AadTenantId": "[parameters('aadTenantId')]",
                "Identity:AdminIdentity:RoleName": "monaadmins",
                "Identity:AppIdentity:AadClientId": "[parameters('aadClientId')]",
                "Identity:AppIdentity:AadClientSecret": "[parameters('aadClientSecret')]",
                "Identity:AppIdentity:AadPrincipalId": "[parameters('aadPrincipalId')]",
                "Identity:AppIdentity:AadTenantId": "[parameters('aadTenantId')]",
                "Subscriptions:Events:EventGrid:TopicEndpoint": "[reference(variables('eventGridTopicName')).endpoint]",
                "Subscriptions:Events:EventGrid:TopicKey": "[listKeys(resourceId('Microsoft.EventGrid/topics/', variables('eventGridTopicName')), '2020-04-01-preview').key1]",
                "Subscriptions:Staging:Cache:BlobStorage:ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-01-01').keys[0].value, ';EndpointSuffix=core.windows.net')]",
                "Subscriptions:Testing:Cache:BlobStorage:ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-01-01').keys[0].value, ';EndpointSuffix=core.windows.net')]",
                "Subscriptions:Staging:Cache:BlobStorage:ContainerName": "[variables('stageSubContainerName')]",
                "Subscriptions:Testing:Cache:BlobStorage:ContainerName": "[variables('testSubContainerName')]",
                "PublisherConfig:Store:BlobStorage:ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-01-01').keys[0].value, ';EndpointSuffix=core.windows.net')]",
                "PublisherConfig:Store:BlobStorage:ContainerName": "[variables('configContainerName')]"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('logicApps').eventGridConnectionName]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('eventGridTopicName')]"
            ],
            "kind": "V1",
            "properties": {
                "displayName": "[variables('logicApps_ui')[parameters('language')].eventGridConnectionDisplayName]",
                "customParameterValues": {},
                "parameterValues": {
                    "token:clientId": "[parameters('aadClientId')]",
                    "token:clientSecret": "[parameters('aadClientSecret')]",
                    "token:TenantId": "[parameters('aadTenantId')]",
                    "token:grantType": "client_credentials"
                },
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('logicApps').onPurchased.name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "mona:name": "[variables('logicApps_ui')[parameters('language')].appNames.onPurchased]",
                "mona:description": "[variables('logicApps_ui')[parameters('language')].appDescriptions.onPurchased]",
                "mona:event-type": "[variables('logicApps').onPurchased.triggerEventType]"
            },
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('logicApps').eventGridConnectionName]"
            ],
            "properties": {
                "state": "[variables('logicApps').onPurchased.defaultState]",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "[variables('logicApps_ui')[parameters('language')].triggerNames.onPurchased]": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "WebHook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "[variables('logicApps').onPurchased.triggerEventType]"
                                            ]
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventGrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id, '/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": {
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "Event ID": {
                                            "type": "string"
                                        },
                                        "Event Type": {
                                            "type": "string"
                                        },
                                        "Event Version": {
                                            "type": "string"
                                        },
                                        "Operation Date/Time UTC": {
                                            "type": "string"
                                        },
                                        "Operation ID": {
                                            "type": "string"
                                        },
                                        "Subscription": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {},
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": {
                            "inputs": {
                                "content": "@body('Parse_event_information')?['Subscription']",
                                "schema": {
                                    "properties": {
                                        "Beneficiary AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary Email Address": {
                                            "type": "string"
                                        },
                                        "Beneficiary User ID": {
                                            "type": "string"
                                        },
                                        "Is Free Trial Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Is Test Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Offer ID": {
                                            "type": "string"
                                        },
                                        "Plan ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Purchaser Email Address": {
                                            "type": "string"
                                        },
                                        "Purchaser User ID": {
                                            "type": "string"
                                        },
                                        "Subscription End Date": {
                                            "type": "string"
                                        },
                                        "Subscription ID": {
                                            "type": "string"
                                        },
                                        "Subscription Name": {
                                            "type": "string"
                                        },
                                        "Subscription Start Date": {
                                            "type": "string"
                                        },
                                        "Subscription Status": {
                                            "type": "string"
                                        },
                                        "Subscription Term Unit": {
                                            "type": "string"
                                        },
                                        "Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": {
                            "actions": {},
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplaceCondition]": {
                            "actions": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplace]": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "[variables('marketplaceApiAuthAudience')]",
                                            "clientId": "[parameters('aadClientId')]",
                                            "credentialType": "Secret",
                                            "secret": "[parameters('aadClientSecret')]",
                                            "tenant": "[parameters('aadTenantId')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "planId": "@{body('Parse_subscription_information')?['Plan ID']}",
                                            "quantity": "@{body('Parse_subscription_information')?['Seat Quantity']}"
                                        },
                                        "headers": {
                                            "content-type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "https://marketplaceapi.microsoft.com/api/saas/subscriptions/@{body('Parse_subscription_information')?['Subscription ID']}/activate?api-version=2018-08-31"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@body('Parse_subscription_information')?['Is Test Subscription?']",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventGrid": {
                                "connectionId": "[resourceId('Microsoft.web/connections', variables('logicApps').eventGridConnectionName)]",
                                "connectionName": "[variables('logicApps').eventGridConnectionName]",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('logicApps').onCancelled.name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "mona:name": "[variables('logicApps_ui')[parameters('language')].appNames.onCancelled]",
                "mona:description": "[variables('logicApps_ui')[parameters('language')].appDescriptions.onCancelled]",
                "mona:event-type": "[variables('logicApps').onCancelled.triggerEventType]"
            },
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('logicApps').eventGridConnectionName]"
            ],
            "properties": {
                "state": "[variables('logicApps').onCancelled.defaultState]",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "[variables('logicApps_ui')[parameters('language')].triggerNames.onCancelled]": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "[variables('logicApps').onCancelled.triggerEventType]"
                                            ]
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventGrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id, '/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": {
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "Event ID": {
                                            "type": "string"
                                        },
                                        "Event Type": {
                                            "type": "string"
                                        },
                                        "Event Version": {
                                            "type": "string"
                                        },
                                        "Operation Date/Time UTC": {
                                            "type": "string"
                                        },
                                        "Operation ID": {
                                            "type": "string"
                                        },
                                        "Subscription": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {},
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": {
                            "inputs": {
                                "content": "@body('Parse_event_information')?['Subscription']",
                                "schema": {
                                    "properties": {
                                        "Beneficiary AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary Email Address": {
                                            "type": "string"
                                        },
                                        "Beneficiary User ID": {
                                            "type": "string"
                                        },
                                        "Is Free Trial Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Is Test Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Offer ID": {
                                            "type": "string"
                                        },
                                        "Plan ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Purchaser Email Address": {
                                            "type": "string"
                                        },
                                        "Purchaser User ID": {
                                            "type": "string"
                                        },
                                        "Subscription End Date": {
                                            "type": "string"
                                        },
                                        "Subscription ID": {
                                            "type": "string"
                                        },
                                        "Subscription Name": {
                                            "type": "string"
                                        },
                                        "Subscription Start Date": {
                                            "type": "string"
                                        },
                                        "Subscription Status": {
                                            "type": "string"
                                        },
                                        "Subscription Term Unit": {
                                            "type": "string"
                                        },
                                        "Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": {
                            "actions": {},
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventGrid": {
                                "connectionId": "[resourceId('Microsoft.web/connections', variables('logicApps').eventGridConnectionName)]",
                                "connectionName": "[variables('logicApps').eventGridConnectionName]",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('logicApps').onRenewed.name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "mona:name": "[variables('logicApps_ui')[parameters('language')].appNames.onRenewed]",
                "mona:description": "[variables('logicApps_ui')[parameters('language')].appDescriptions.onRenewed]",
                "mona:event-type": "[variables('logicApps').onCancelled.triggerEventType]"
            },
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('logicApps').eventGridConnectionName]"
            ],
            "properties": {
                "state": "[variables('logicApps').onRenewed.defaultState]",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "[variables('logicApps_ui')[parameters('language')].triggerNames.onRenewed]": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "[variables('logicApps').onRenewed.triggerEventType]"
                                            ]
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventGrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id, '/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": {
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "Event ID": {
                                            "type": "string"
                                        },
                                        "Event Type": {
                                            "type": "string"
                                        },
                                        "Event Version": {
                                            "type": "string"
                                        },
                                        "Operation Date/Time UTC": {
                                            "type": "string"
                                        },
                                        "Operation ID": {
                                            "type": "string"
                                        },
                                        "Subscription": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {},
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": {
                            "inputs": {
                                "content": "@body('Parse_event_information')?['Subscription']",
                                "schema": {
                                    "properties": {
                                        "Beneficiary AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary Email Address": {
                                            "type": "string"
                                        },
                                        "Beneficiary User ID": {
                                            "type": "string"
                                        },
                                        "Is Free Trial Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Is Test Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Offer ID": {
                                            "type": "string"
                                        },
                                        "Plan ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Purchaser Email Address": {
                                            "type": "string"
                                        },
                                        "Purchaser User ID": {
                                            "type": "string"
                                        },
                                        "Subscription End Date": {
                                            "type": "string"
                                        },
                                        "Subscription ID": {
                                            "type": "string"
                                        },
                                        "Subscription Name": {
                                            "type": "string"
                                        },
                                        "Subscription Start Date": {
                                            "type": "string"
                                        },
                                        "Subscription Status": {
                                            "type": "string"
                                        },
                                        "Subscription Term Unit": {
                                            "type": "string"
                                        },
                                        "Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": {
                            "actions": {},
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventGrid": {
                                "connectionId": "[resourceId('Microsoft.web/connections', variables('logicApps').eventGridConnectionName)]",
                                "connectionName": "[variables('logicApps').eventGridConnectionName]",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('logicApps').onPlanChanged.name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "mona:name": "[variables('logicApps_ui')[parameters('language')].appNames.onPlanChanged]",
                "mona:description": "[variables('logicApps_ui')[parameters('language')].appDescriptions.onPlanChanged]",
                "mona:event-type": "[variables('logicApps').onPlanChanged.triggerEventType]"
            },
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('logicApps').eventGridConnectionName]"
            ],
            "properties": {
                "state": "[variables('logicApps').onPlanChanged.defaultState]",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "[variables('logicApps_ui')[parameters('language')].triggerNames.onPlanChanged]": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "[variables('logicApps').onPlanChanged.triggerEventType]"
                                            ]
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventGrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id, '/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": {
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "Event ID": {
                                            "type": "string"
                                        },
                                        "Event Type": {
                                            "type": "string"
                                        },
                                        "Event Version": {
                                            "type": "string"
                                        },
                                        "Operation Date/Time UTC": {
                                            "type": "string"
                                        },
                                        "Operation ID": {
                                            "type": "string"
                                        },
                                        "Subscription": {
                                            "type": "object"
                                        },
                                        "New Plan ID": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {},
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": {
                            "inputs": {
                                "content": "@body('Parse_event_information')?['Subscription']",
                                "schema": {
                                    "properties": {
                                        "Beneficiary AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary Email Address": {
                                            "type": "string"
                                        },
                                        "Beneficiary User ID": {
                                            "type": "string"
                                        },
                                        "Is Free Trial Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Is Test Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Offer ID": {
                                            "type": "string"
                                        },
                                        "Plan ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Purchaser Email Address": {
                                            "type": "string"
                                        },
                                        "Purchaser User ID": {
                                            "type": "string"
                                        },
                                        "Subscription End Date": {
                                            "type": "string"
                                        },
                                        "Subscription ID": {
                                            "type": "string"
                                        },
                                        "Subscription Name": {
                                            "type": "string"
                                        },
                                        "Subscription Start Date": {
                                            "type": "string"
                                        },
                                        "Subscription Status": {
                                            "type": "string"
                                        },
                                        "Subscription Term Unit": {
                                            "type": "string"
                                        },
                                        "Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": {
                            "actions": {},
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplaceCondition]": {
                            "actions": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplace]": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "[variables('marketplaceApiAuthAudience')]",
                                            "clientId": "[parameters('aadClientId')]",
                                            "credentialType": "Secret",
                                            "secret": "[parameters('aadClientSecret')]",
                                            "tenant": "[parameters('aadTenantId')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "status": "Success"
                                        },
                                        "headers": {
                                            "content-type": "application/json"
                                        },
                                        "method": "PATCH",
                                        "uri": "https://marketplaceapi.microsoft.com/api/saas/subscriptions/@{body('Parse_subscription_information')?['Subscription ID']}/operations/@{body('Parse_event_information')?['Operation ID']}?api-version=2018-08-31"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            true,
                                            true
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@body('Parse_subscription_information')?['Is Test Subscription?']",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventGrid": {
                                "connectionId": "[resourceId('Microsoft.web/connections', variables('logicApps').eventGridConnectionName)]",
                                "connectionName": "[variables('logicApps').eventGridConnectionName]",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('logicApps').onSeatQtyChanged.name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "mona:name": "[variables('logicApps_ui')[parameters('language')].appNames.onSeatQtyChanged]",
                "mona:description": "[variables('logicApps_ui')[parameters('language')].appDescriptions.onSeatQtyChanged]",
                "mona:event-type": "[variables('logicApps').onSeatQtyChanged.triggerEventType]"
            },
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('logicApps').eventGridConnectionName]"
            ],
            "properties": {
                "state": "[variables('logicApps').onSeatQtyChanged.defaultState]",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "[variables('logicApps_ui')[parameters('language')].triggerNames.onSeatQtyChanged]": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "[variables('logicApps').onSeatQtyChanged.triggerEventType]"
                                            ]
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventGrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id, '/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": {
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "Event ID": {
                                            "type": "string"
                                        },
                                        "Event Type": {
                                            "type": "string"
                                        },
                                        "Event Version": {
                                            "type": "string"
                                        },
                                        "Operation Date/Time UTC": {
                                            "type": "string"
                                        },
                                        "Operation ID": {
                                            "type": "string"
                                        },
                                        "Subscription": {
                                            "type": "object"
                                        },
                                        "New Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {},
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": {
                            "inputs": {
                                "content": "@body('Parse_event_information')?['Subscription']",
                                "schema": {
                                    "properties": {
                                        "Beneficiary AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary Email Address": {
                                            "type": "string"
                                        },
                                        "Beneficiary User ID": {
                                            "type": "string"
                                        },
                                        "Is Free Trial Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Is Test Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Offer ID": {
                                            "type": "string"
                                        },
                                        "Plan ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Purchaser Email Address": {
                                            "type": "string"
                                        },
                                        "Purchaser User ID": {
                                            "type": "string"
                                        },
                                        "Subscription End Date": {
                                            "type": "string"
                                        },
                                        "Subscription ID": {
                                            "type": "string"
                                        },
                                        "Subscription Name": {
                                            "type": "string"
                                        },
                                        "Subscription Start Date": {
                                            "type": "string"
                                        },
                                        "Subscription Status": {
                                            "type": "string"
                                        },
                                        "Subscription Term Unit": {
                                            "type": "string"
                                        },
                                        "Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": {
                            "actions": {},
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplaceCondition]": {
                            "actions": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplace]": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "[variables('marketplaceApiAuthAudience')]",
                                            "clientId": "[parameters('aadClientId')]",
                                            "credentialType": "Secret",
                                            "secret": "[parameters('aadClientSecret')]",
                                            "tenant": "[parameters('aadTenantId')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "status": "Success"
                                        },
                                        "headers": {
                                            "content-type": "application/json"
                                        },
                                        "method": "PATCH",
                                        "uri": "https://marketplaceapi.microsoft.com/api/saas/subscriptions/@{body('Parse_subscription_information')?['Subscription ID']}/operations/@{body('Parse_event_information')?['Operation ID']}?api-version=2018-08-31"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            true,
                                            true
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@body('Parse_subscription_information')?['Is Test Subscription?']",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventGrid": {
                                "connectionId": "[resourceId('Microsoft.web/connections', variables('logicApps').eventGridConnectionName)]",
                                "connectionName": "[variables('logicApps').eventGridConnectionName]",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('logicApps').onSuspended.name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "mona:name": "[variables('logicApps_ui')[parameters('language')].appNames.onSuspended]",
                "mona:description": "[variables('logicApps_ui')[parameters('language')].appDescriptions.onSuspended]",
                "mona:event-type": "[variables('logicApps').onSuspended.triggerEventType]"
            },
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('logicApps').eventGridConnectionName]"
            ],
            "properties": {
                "state": "[variables('logicApps').onSuspended.defaultState]",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "[variables('logicApps_ui')[parameters('language')].triggerNames.onSuspended]": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "[variables('logicApps').onSuspended.triggerEventType]"
                                            ]
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventGrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id, '/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": {
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "Event ID": {
                                            "type": "string"
                                        },
                                        "Event Type": {
                                            "type": "string"
                                        },
                                        "Event Version": {
                                            "type": "string"
                                        },
                                        "Operation Date/Time UTC": {
                                            "type": "string"
                                        },
                                        "Operation ID": {
                                            "type": "string"
                                        },
                                        "Subscription": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {},
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": {
                            "inputs": {
                                "content": "@body('Parse_event_information')?['Subscription']",
                                "schema": {
                                    "properties": {
                                        "Beneficiary AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary Email Address": {
                                            "type": "string"
                                        },
                                        "Beneficiary User ID": {
                                            "type": "string"
                                        },
                                        "Is Free Trial Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Is Test Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Offer ID": {
                                            "type": "string"
                                        },
                                        "Plan ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Purchaser Email Address": {
                                            "type": "string"
                                        },
                                        "Purchaser User ID": {
                                            "type": "string"
                                        },
                                        "Subscription End Date": {
                                            "type": "string"
                                        },
                                        "Subscription ID": {
                                            "type": "string"
                                        },
                                        "Subscription Name": {
                                            "type": "string"
                                        },
                                        "Subscription Start Date": {
                                            "type": "string"
                                        },
                                        "Subscription Status": {
                                            "type": "string"
                                        },
                                        "Subscription Term Unit": {
                                            "type": "string"
                                        },
                                        "Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": {
                            "actions": {},
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventGrid": {
                                "connectionId": "[resourceId('Microsoft.web/connections', variables('logicApps').eventGridConnectionName)]",
                                "connectionName": "[variables('logicApps').eventGridConnectionName]",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('logicApps').onReinstated.name]",
            "location": "[resourceGroup().location]",
            "tags": {
                "mona:name": "[variables('logicApps_ui')[parameters('language')].appNames.onReinstated]",
                "mona:description": "[variables('logicApps_ui')[parameters('language')].appDescriptions.onReinstated]",
                "mona:event-type": "[variables('logicApps').onReinstated.triggerEventType]"
            },
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('logicApps').eventGridConnectionName]"
            ],
            "properties": {
                "state": "[variables('logicApps').onReinstated.defaultState]",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "[variables('logicApps_ui')[parameters('language')].triggerNames.onReinstated]": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "[variables('logicApps').onReinstated.triggerEventType]"
                                            ]
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventGrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id, '/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": {
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "Event ID": {
                                            "type": "string"
                                        },
                                        "Event Type": {
                                            "type": "string"
                                        },
                                        "Event Version": {
                                            "type": "string"
                                        },
                                        "Operation Date/Time UTC": {
                                            "type": "string"
                                        },
                                        "Operation ID": {
                                            "type": "string"
                                        },
                                        "Subscription": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {},
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": {
                            "inputs": {
                                "content": "@body('Parse_event_information')?['Subscription']",
                                "schema": {
                                    "properties": {
                                        "Beneficiary AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Beneficiary Email Address": {
                                            "type": "string"
                                        },
                                        "Beneficiary User ID": {
                                            "type": "string"
                                        },
                                        "Is Free Trial Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Is Test Subscription?": {
                                            "type": "boolean"
                                        },
                                        "Offer ID": {
                                            "type": "string"
                                        },
                                        "Plan ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Object ID": {
                                            "type": "string"
                                        },
                                        "Purchaser AAD Tenant ID": {
                                            "type": "string"
                                        },
                                        "Purchaser Email Address": {
                                            "type": "string"
                                        },
                                        "Purchaser User ID": {
                                            "type": "string"
                                        },
                                        "Subscription End Date": {
                                            "type": "string"
                                        },
                                        "Subscription ID": {
                                            "type": "string"
                                        },
                                        "Subscription Name": {
                                            "type": "string"
                                        },
                                        "Subscription Start Date": {
                                            "type": "string"
                                        },
                                        "Subscription Status": {
                                            "type": "string"
                                        },
                                        "Subscription Term Unit": {
                                            "type": "string"
                                        },
                                        "Seat Quantity": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseEventInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": {
                            "actions": {},
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.parseSubscriptionInfo]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplaceCondition]": {
                            "actions": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.notifyMarketplace]": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "[variables('marketplaceApiAuthAudience')]",
                                            "clientId": "[parameters('aadClientId')]",
                                            "credentialType": "Secret",
                                            "secret": "[parameters('aadClientSecret')]",
                                            "tenant": "[parameters('aadTenantId')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "status": "Success"
                                        },
                                        "headers": {
                                            "content-type": "application/json"
                                        },
                                        "method": "PATCH",
                                        "uri": "https://marketplaceapi.microsoft.com/api/saas/subscriptions/@{body('Parse_subscription_information')?['Subscription ID']}/operations/@{body('Parse_event_information')?['Operation ID']}?api-version=2018-08-31"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            true,
                                            true
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@body('Parse_subscription_information')?['Is Test Subscription?']",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "[variables('logicApps_ui')[parameters('language')].actionNames.yourIntegrationLogic]": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventGrid": {
                                "connectionId": "[resourceId('Microsoft.web/connections', variables('logicApps').eventGridConnectionName)]",
                                "connectionName": "[variables('logicApps').eventGridConnectionName]",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "deploymentName": {
            "type": "string",
            "value": "[variables('deploymentName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "webAppBaseUrl": {
            "type": "string",
            "value": "[concat('https://', variables('webAppName'), '.azurewebsites.net')]"
        },
        "webAppName": {
            "type": "string",
            "value": "[variables('webAppName')]"
        }
    }
}
